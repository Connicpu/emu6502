#[derive(Copy, Clone, Debug, PartialEq)]
pub enum OpId {
	ADC = 1,
	AND,
	ASL,
	BCC,
	BCS,
	BEQ,
	BIT,
	BMI,
	BNE,
	BPL,
	BRK,
	BVC,
	BVS,
	CLC,
	CLD,
	CLI,
	CLV,
	CMP,
	CPX,
	CPY,
	DEC,
	DEX,
	DEY,
	EOR,
	INC,
	INX,
	INY,
	JMP,
	JSR,
	LDA,
	LDX,
	LDY,
	LSR,
	NOP,
	ORA,
	PHA,
	PHP,
	PLA,
	PLP,
	ROL,
	ROR,
	RTI,
	RTS,
	SBC,
	SEC,
	SED,
	SEI,
	STA,
	STX,
	STY,
	TAX,
	TAY,
	TSX,
	TXA,
	TXS,
	TYA,
    INVALID,
}

#[derive(Copy, Clone, Debug, PartialEq)]
pub enum Addressing {
    Implied,
    Absolute,
    AbsoluteX,
    AbsoluteY,
    Accumulator,
    Immediate,
    Indirect,
    IndirectX,
    IndirectY,
    Relative,
    ZeroPage,
    ZeroPageX,
    ZeroPageY,
}

#[derive(Copy, Clone, Debug, PartialEq)]
pub struct OpCode {
    pub code: u8,
    pub id: OpId,
    pub addressing: Addressing,
    pub bytes: u8,
    pub cycles: u8,
}

impl OpCode {
    fn new(code: u8, id: OpId, addressing: Addressing, bytes: u8, cycles: u8) -> OpCode {
        OpCode {
            code: code,
            id: id,
            addressing: addressing,
            bytes: bytes,
            cycles: cycles,
        }
    }
    
    pub fn get(code: u8) -> Option<OpCode> {
        use self::OpId::*;
        use self::Addressing::*;
        match code {
            0x69 => Some(OpCode::new(0x69, ADC, Immediate, 2, 2)),
            0x65 => Some(OpCode::new(0x65, ADC, ZeroPage, 2, 3)),
            0x75 => Some(OpCode::new(0x75, ADC, ZeroPageX, 2, 4)),
            0x6D => Some(OpCode::new(0x6D, ADC, Absolute, 3, 4)),
            0x7D => Some(OpCode::new(0x7D, ADC, AbsoluteX, 3, 4)),
            0x79 => Some(OpCode::new(0x79, ADC, AbsoluteY, 3, 4)),
            0x61 => Some(OpCode::new(0x61, ADC, IndirectX, 2, 6)),
            0x71 => Some(OpCode::new(0x71, ADC, IndirectY, 2, 5)),
            0x29 => Some(OpCode::new(0x29, AND, Immediate, 2, 2)),
            0x25 => Some(OpCode::new(0x25, AND, ZeroPage, 2, 3)),
            0x35 => Some(OpCode::new(0x35, AND, ZeroPageX, 2, 4)),
            0x2D => Some(OpCode::new(0x2D, AND, Absolute, 3, 4)),
            0x3D => Some(OpCode::new(0x3D, AND, AbsoluteX, 3, 4)),
            0x39 => Some(OpCode::new(0x39, AND, AbsoluteY, 3, 4)),
            0x21 => Some(OpCode::new(0x21, AND, IndirectX, 2, 6)),
            0x31 => Some(OpCode::new(0x31, AND, IndirectY, 2, 5)),
            0x0A => Some(OpCode::new(0x0A, ASL, Accumulator, 1, 2)),
            0x06 => Some(OpCode::new(0x06, ASL, ZeroPage, 2, 5)),
            0x16 => Some(OpCode::new(0x16, ASL, ZeroPageX, 2, 6)),
            0x0E => Some(OpCode::new(0x0E, ASL, Absolute, 3, 6)),
            0x1E => Some(OpCode::new(0x1E, ASL, AbsoluteX, 3, 7)),
            0x90 => Some(OpCode::new(0x90, BCC, Relative, 2, 2)),
            0xB0 => Some(OpCode::new(0xB0, BCS, Relative, 2, 2)),
            0xF0 => Some(OpCode::new(0xF0, BEQ, Relative, 2, 2)),
            0x24 => Some(OpCode::new(0x24, BIT, ZeroPage, 2, 3)),
            0x2C => Some(OpCode::new(0x2C, BIT, Absolute, 3, 4)),
            0x30 => Some(OpCode::new(0x30, BMI, Relative, 2, 2)),
            0xD0 => Some(OpCode::new(0xD0, BNE, Relative, 2, 2)),
            0x10 => Some(OpCode::new(0x10, BPL, Relative, 2, 2)),
            0x00 => Some(OpCode::new(0x00, BRK, Implied, 1, 7)),
            0x50 => Some(OpCode::new(0x50, BVC, Relative, 2, 2)),
            0x70 => Some(OpCode::new(0x70, BVS, Relative, 2, 2)),
            0x18 => Some(OpCode::new(0x18, CLC, Implied, 1, 2)),
            0xD8 => Some(OpCode::new(0xD8, CLD, Implied, 1, 2)),
            0x58 => Some(OpCode::new(0x58, CLI, Implied, 1, 2)),
            0xB8 => Some(OpCode::new(0xB8, CLV, Implied, 1, 2)),
            0xC9 => Some(OpCode::new(0xC9, CMP, Immediate, 2, 2)),
            0xC5 => Some(OpCode::new(0xC5, CMP, ZeroPage, 2, 3)),
            0xD5 => Some(OpCode::new(0xD5, CMP, ZeroPageX, 2, 4)),
            0xCD => Some(OpCode::new(0xCD, CMP, Absolute, 3, 4)),
            0xDD => Some(OpCode::new(0xDD, CMP, AbsoluteX, 3, 4)),
            0xD9 => Some(OpCode::new(0xD9, CMP, AbsoluteY, 3, 4)),
            0xC1 => Some(OpCode::new(0xC1, CMP, IndirectX, 2, 6)),
            0xD1 => Some(OpCode::new(0xD1, CMP, IndirectY, 2, 5)),
            0xE0 => Some(OpCode::new(0xE0, CPX, Immediate, 2, 2)),
            0xE4 => Some(OpCode::new(0xE4, CPX, ZeroPage, 2, 3)),
            0xEC => Some(OpCode::new(0xEC, CPX, Absolute, 3, 4)),
            0xC0 => Some(OpCode::new(0xC0, CPY, Immediate, 2, 2)),
            0xC4 => Some(OpCode::new(0xC4, CPY, ZeroPage, 2, 3)),
            0xCC => Some(OpCode::new(0xCC, CPY, Absolute, 3, 4)),
            0xC6 => Some(OpCode::new(0xC6, DEC, ZeroPage, 2, 5)),
            0xD6 => Some(OpCode::new(0xD6, DEC, ZeroPageX, 2, 6)),
            0xCE => Some(OpCode::new(0xCE, DEC, Absolute, 3, 3)),
            0xDE => Some(OpCode::new(0xDE, DEC, AbsoluteX, 3, 7)),
            0xCA => Some(OpCode::new(0xCA, DEX, Implied, 1, 2)),
            0x88 => Some(OpCode::new(0x88, DEY, Implied, 1, 2)),
            0x49 => Some(OpCode::new(0x49, EOR, Immediate, 2, 2)),
            0x45 => Some(OpCode::new(0x45, EOR, ZeroPage, 2, 3)),
            0x55 => Some(OpCode::new(0x55, EOR, ZeroPageX, 2, 4)),
            0x4D => Some(OpCode::new(0x4D, EOR, Absolute, 3, 4)),
            0x5D => Some(OpCode::new(0x5D, EOR, AbsoluteX, 3, 4)),
            0x59 => Some(OpCode::new(0x59, EOR, AbsoluteY, 3, 4)),
            0x41 => Some(OpCode::new(0x41, EOR, IndirectX, 2, 6)),
            0x51 => Some(OpCode::new(0x51, EOR, IndirectY, 2, 5)),
            0xE6 => Some(OpCode::new(0xE6, INC, ZeroPage, 2, 5)),
            0xF6 => Some(OpCode::new(0xF6, INC, ZeroPageX, 2, 6)),
            0xEE => Some(OpCode::new(0xEE, INC, Absolute, 3, 6)),
            0xFE => Some(OpCode::new(0xFE, INC, AbsoluteX, 3, 7)),
            0xE8 => Some(OpCode::new(0xE8, INX, Implied, 1, 2)),
            0xC8 => Some(OpCode::new(0xC8, INY, Implied, 1, 2)),
            0x4C => Some(OpCode::new(0x4C, JMP, Absolute, 3, 3)),
            0x6C => Some(OpCode::new(0x6C, JMP, Indirect, 3, 5)),
            0x20 => Some(OpCode::new(0x20, JSR, Absolute, 3, 6)),
            0xA9 => Some(OpCode::new(0xA9, LDA, Immediate, 2, 2)),
            0xA5 => Some(OpCode::new(0xA5, LDA, ZeroPage, 2, 3)),
            0xB5 => Some(OpCode::new(0xB5, LDA, ZeroPageX, 2, 4)),
            0xAD => Some(OpCode::new(0xAD, LDA, Absolute, 3, 4)),
            0xBD => Some(OpCode::new(0xBD, LDA, AbsoluteX, 3, 4)),
            0xB9 => Some(OpCode::new(0xB9, LDA, AbsoluteY, 3, 4)),
            0xA1 => Some(OpCode::new(0xA1, LDA, IndirectX, 2, 6)),
            0xB1 => Some(OpCode::new(0xB1, LDA, IndirectY, 2, 5)),
            0xA2 => Some(OpCode::new(0xA2, LDX, Immediate, 2, 2)),
            0xA6 => Some(OpCode::new(0xA6, LDX, ZeroPage, 2, 3)),
            0xB6 => Some(OpCode::new(0xB6, LDX, ZeroPageY, 2, 4)),
            0xAE => Some(OpCode::new(0xAE, LDX, Absolute, 3, 4)),
            0xBE => Some(OpCode::new(0xBE, LDX, AbsoluteY, 3, 4)),
            0xA0 => Some(OpCode::new(0xA0, LDY, Immediate, 2, 2)),
            0xA4 => Some(OpCode::new(0xA4, LDY, ZeroPage, 2, 3)),
            0xB4 => Some(OpCode::new(0xB4, LDY, ZeroPageX, 2, 4)),
            0xAC => Some(OpCode::new(0xAC, LDY, Absolute, 3, 4)),
            0xBC => Some(OpCode::new(0xBC, LDY, AbsoluteX, 3, 4)),
            0x4A => Some(OpCode::new(0x4A, LSR, Accumulator, 1, 2)),
            0x46 => Some(OpCode::new(0x46, LSR, ZeroPage, 2, 5)),
            0x56 => Some(OpCode::new(0x56, LSR, ZeroPageX, 2, 6)),
            0x4E => Some(OpCode::new(0x4E, LSR, Absolute, 3, 6)),
            0x5E => Some(OpCode::new(0x5E, LSR, AbsoluteX, 3, 7)),
            0xEA => Some(OpCode::new(0xEA, NOP, Implied, 1, 2)),
            0x09 => Some(OpCode::new(0x09, ORA, Immediate, 2, 2)),
            0x05 => Some(OpCode::new(0x05, ORA, ZeroPage, 2, 3)),
            0x15 => Some(OpCode::new(0x15, ORA, ZeroPageX, 2, 4)),
            0x0D => Some(OpCode::new(0x0D, ORA, Absolute, 3, 4)),
            0x1D => Some(OpCode::new(0x1D, ORA, AbsoluteX, 3, 4)),
            0x19 => Some(OpCode::new(0x19, ORA, AbsoluteY, 3, 4)),
            0x01 => Some(OpCode::new(0x01, ORA, IndirectX, 2, 6)),
            0x11 => Some(OpCode::new(0x11, ORA, IndirectY, 2, 5)),
            0x48 => Some(OpCode::new(0x48, PHA, Implied, 1, 3)),
            0x08 => Some(OpCode::new(0x08, PHP, Implied, 1, 3)),
            0x68 => Some(OpCode::new(0x68, PLA, Implied, 1, 4)),
            0x28 => Some(OpCode::new(0x28, PHP, Implied, 1, 4)),
            0x2A => Some(OpCode::new(0x2A, ROL, Accumulator, 1, 2)),
            0x26 => Some(OpCode::new(0x26, ROL, ZeroPage, 2, 5)),
            0x36 => Some(OpCode::new(0x36, ROL, ZeroPageX, 2, 6)),
            0x2E => Some(OpCode::new(0x2E, ROL, Absolute, 3, 6)),
            0x3E => Some(OpCode::new(0x3E, ROL, AbsoluteX, 3, 7)),
            0x6A => Some(OpCode::new(0x6A, ROR, Accumulator, 1, 2)),
            0x66 => Some(OpCode::new(0x66, ROR, ZeroPage, 2, 5)),
            0x76 => Some(OpCode::new(0x76, ROR, ZeroPageX, 2, 6)),
            0x6E => Some(OpCode::new(0x6E, ROR, Absolute, 3, 6)),
            0x7E => Some(OpCode::new(0x7E, ROR, AbsoluteX, 3, 7)),
            0x40 => Some(OpCode::new(0x40, RTI, Implied, 1, 6)),
            0x60 => Some(OpCode::new(0x60, RTS, Implied, 1, 6)),
            0xE9 => Some(OpCode::new(0xE9, SBC, Immediate, 2, 2)),
            0xE5 => Some(OpCode::new(0xE5, SBC, ZeroPage, 2, 3)),
            0xF5 => Some(OpCode::new(0xF5, SBC, ZeroPageX, 2, 4)),
            0xED => Some(OpCode::new(0xED, SBC, Absolute, 3, 4)),
            0xFD => Some(OpCode::new(0xFD, SBC, AbsoluteX, 3, 4)),
            0xF9 => Some(OpCode::new(0xF9, SBC, AbsoluteY, 3, 4)),
            0xE1 => Some(OpCode::new(0xE1, SBC, IndirectX, 2, 6)),
            0xF1 => Some(OpCode::new(0xF1, SBC, IndirectY, 2, 5)),
            0x38 => Some(OpCode::new(0x38, SEC, Implied, 1, 2)),
            0xF8 => Some(OpCode::new(0xF8, SED, Implied, 1, 2)),
            0x78 => Some(OpCode::new(0x78, SEI, Implied, 1, 2)),
            0x85 => Some(OpCode::new(0x85, STA, ZeroPage, 2, 3)),
            0x95 => Some(OpCode::new(0x95, STA, ZeroPageX, 2, 4)),
            0x8D => Some(OpCode::new(0x8D, STA, Absolute, 3, 4)),
            0x9D => Some(OpCode::new(0x9D, STA, AbsoluteX, 3, 5)),
            0x99 => Some(OpCode::new(0x99, STA, AbsoluteY, 3, 5)),
            0x81 => Some(OpCode::new(0x81, STA, IndirectX, 2, 6)),
            0x91 => Some(OpCode::new(0x91, STA, IndirectY, 2, 6)),
            0x86 => Some(OpCode::new(0x86, STX, ZeroPage, 2, 3)),
            0x96 => Some(OpCode::new(0x96, STX, ZeroPageY, 2, 4)),
            0x8E => Some(OpCode::new(0x8E, STX, Absolute, 3, 4)),
            0x84 => Some(OpCode::new(0x84, STY, ZeroPage, 2, 3)),
            0x94 => Some(OpCode::new(0x94, STY, ZeroPageX, 2, 4)),
            0x8C => Some(OpCode::new(0x8C, STY, Absolute, 3, 4)),
            0xAA => Some(OpCode::new(0xAA, TAX, Implied, 1, 2)),
            0xA8 => Some(OpCode::new(0xA8, TAY, Implied, 1, 2)),
            0xBA => Some(OpCode::new(0xBA, TSX, Implied, 1, 2)),
            0x8A => Some(OpCode::new(0x8A, TXA, Implied, 1, 2)),
            0x9A => Some(OpCode::new(0x9A, TXS, Implied, 1, 2)),
            0x98 => Some(OpCode::new(0x98, TYA, Implied, 1, 2)),
            _ => None,
        }
    }
}

